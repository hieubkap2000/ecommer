/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/admin/slide.js":
/*!*************************************!*\
  !*** ./resources/js/admin/slide.js ***!
  \*************************************/
/***/ (() => {

eval("$(function () {\n  var url = \"slide/getAll\";\n  var columns = [{\n    data: \"DT_RowIndex\"\n  }, {\n    data: \"image\",\n    render: function render(data, type, full, meta) {\n      return '<img src=\"' + data + '\" height=\"40\"/>';\n    }\n  }, {\n    data: \"slide_name\"\n  }, {\n    data: \"sort_order\"\n  }, {\n    data: \"status\"\n  }, {\n    data: \"edit\"\n  }, {\n    data: \"detele\"\n  }];\n  initDatatables(url, columns);\n});\nvar urlSave = \"\";\n\nwindow.insert = function () {\n  // remove image preview\n  $(\"#holder img\").remove(); // set url save data\n\n  urlSave = \"slide/store\"; // reset form\n\n  $(\"#form\")[0].reset();\n};\n\nwindow.edit = function (id) {\n  // remove image preview\n  $(\"#holder img\").remove(); //set url save data\n\n  urlSave = \"slide/update/\".concat(id); // call ajax, get info\n\n  $.ajax({\n    url: \"slide/edit/\".concat(id),\n    type: \"GET\",\n    success: function success(data) {\n      $(\"#slide_name\").val(data.slide_name);\n      $(\"#sort_order\").val(data.sort_order);\n      $(\"#status\").bootstrapSwitch(\"state\", data.status == \"on\", true);\n      $(\"#thumbnail\").val(data.image);\n      $(\"#holder\").append(\"<img src=\\\"\".concat(data.image, \"\\\" style=\\\"height: 5rem;\\\">\"));\n    },\n    error: function error(xhr) {\n      console.log(xhr);\n    }\n  });\n};\n\nwindow.save = function () {\n  $.ajax({\n    url: urlSave,\n    type: \"POST\",\n    dataSrc: \"\",\n    data: {\n      _token: $(\"#token\").val(),\n      slide_name: $(\"#slide_name\").val(),\n      image: $(\"#thumbnail\").val(),\n      sort_order: $(\"#sort_order\").val(),\n      status: $(\"#status\").bootstrapSwitch(\"state\") ? \"on\" : \"off\"\n    },\n    success: function success(data) {\n      $(\"#example1\").dataTable().api().ajax.reload();\n      Swal.fire(\"Đã lưu !\", \"Lưu slide thành công!\", \"success\");\n      $(\"#form\")[0].reset();\n      $(\"[data-dismiss=modal]\").trigger({\n        type: \"click\"\n      });\n    },\n    error: function error(xhr) {\n      $.each(xhr.responseJSON.errors, function (key, value) {\n        if (value.length >= 2) {\n          $.each(value, function (k, v) {\n            toastr[\"error\"](v);\n          });\n        } else {\n          toastr[\"error\"](value);\n        }\n      });\n    }\n  });\n};\n\nwindow.delele = function (id) {\n  Swal.fire({\n    title: \"Bạn có muốn xóa slide này không?\",\n    text: \"Bạn sẽ không thể khôi phục lại.\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Xóa slide\",\n    cancelButtonText: \"Hủy\"\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        url: \"slide/delete/\".concat(id),\n        type: \"GET\",\n        success: function success(data) {\n          $(\"#example1\").dataTable().api().ajax.reload();\n          Swal.fire(\"Đã xóa!\", \"Xóa slide thành công!\", \"success\");\n        },\n        error: function error() {\n          toastr[\"error\"](\"Xóa slide không thành công!\");\n        }\n      });\n    }\n  });\n}; //image file manager\n\n\n$(\"#lfm\").filemanager(\"image\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/admin/slide.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/admin/slide.js"]();
/******/ 	
/******/ })()
;